<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        61rGCa4CAAAAAElFTkSuQmCC
</value>
  </data>
</root>